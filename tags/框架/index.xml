<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>框架 - 标签 - OrionPax 的个人博客</title>
        <link>http://blog.orionpax.top/tags/%E6%A1%86%E6%9E%B6/</link>
        <description>框架 - 标签 - OrionPax 的个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>OrionPax19970905@gmail.com (OrionPax)</managingEditor>
            <webMaster>OrionPax19970905@gmail.com (OrionPax)</webMaster><lastBuildDate>Sun, 23 May 2021 14:16:00 &#43;0800</lastBuildDate><atom:link href="http://blog.orionpax.top/tags/%E6%A1%86%E6%9E%B6/" rel="self" type="application/rss+xml" /><item>
    <title>唯二好用的连接池之 Druid 的使用</title>
    <link>http://blog.orionpax.top/2021/05/druid/</link>
    <pubDate>Sun, 23 May 2021 14:16:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2021/05/druid/</guid>
    <description><![CDATA[简介 Druid 是一个数据库连接池。在功能、性能、扩展性方面，都超过其他数据库连接池，包括 DBCP、C3P0、BoneCP、Proxool、JBoss]]></description>
</item><item>
    <title>Angular 的使用</title>
    <link>http://blog.orionpax.top/2020/04/angular/</link>
    <pubDate>Sun, 12 Apr 2020 14:28:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2020/04/angular/</guid>
    <description><![CDATA[简介 Angular 是一个应用设计框架与开发平台，用于创建高效、复杂、精致的单页面应用。 基础 模版语法 Angular 模板语法的五个常用特性： *ngFor *ngIf 插值 {{}} 属性绑定 [] 事件绑定]]></description>
</item><item>
    <title>Flutter 的使用</title>
    <link>http://blog.orionpax.top/2020/03/flutter/</link>
    <pubDate>Sat, 21 Mar 2020 21:04:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2020/03/flutter/</guid>
    <description><![CDATA[基础 Dart 什么是 Dart ? 因为 JavaScript 的种种问题，Dart 最初是 Google 设计用来代替 JavaScript 的语言。但是 JavaScript 因为 Node.js 成为了前后端同吃的全栈语言，前端的开发模式也因此改变，D]]></description>
</item><item>
    <title>Spring Boot 的使用</title>
    <link>http://blog.orionpax.top/2019/11/spring-boot/</link>
    <pubDate>Fri, 22 Nov 2019 08:35:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/11/spring-boot/</guid>
    <description><![CDATA[简介 Spring Boot是在Spring框架基础上创建的全新框架。相比于以往的一些开发框架，Spring Boot使用更加简单，而且功能更加丰富，性能更]]></description>
</item><item>
    <title>Nest 的使用</title>
    <link>http://blog.orionpax.top/2019/09/nest/</link>
    <pubDate>Sat, 28 Sep 2019 20:31:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/09/nest/</guid>
    <description><![CDATA[简介 Nest 是一个用于构建高效，可扩展的 Node.js 服务器端应用程序的框架。它使用渐进式 JavaScript，内置并完全支持 TypeScript（但仍然允许]]></description>
</item><item>
    <title>Node.js 知识总结</title>
    <link>http://blog.orionpax.top/2019/09/nodejs/</link>
    <pubDate>Mon, 23 Sep 2019 17:11:43 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/09/nodejs/</guid>
    <description><![CDATA[简介 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。 基础 全局对象、变量、函数 全局对象 global : 表示 Node 所在]]></description>
</item><item>
    <title>微信小程序开发</title>
    <link>http://blog.orionpax.top/2019/08/wx-mini/</link>
    <pubDate>Sun, 04 Aug 2019 20:12:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/08/wx-mini/</guid>
    <description><![CDATA[简介 小程序是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或搜一下即可打开应用。微信小程序则是微信平台的小程序]]></description>
</item><item>
    <title>Taro 的使用</title>
    <link>http://blog.orionpax.top/2019/07/taro/</link>
    <pubDate>Thu, 25 Jul 2019 11:27:29 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/07/taro/</guid>
    <description><![CDATA[简介 Taro 是一套遵循 React 语法规范的 多端开发 解决方案。现如今市面上端的形态多种多样，Web、React-Native、微信小程序等各种端大行其道，当]]></description>
</item><item>
    <title>React Router 的使用</title>
    <link>http://blog.orionpax.top/2019/07/react-router/</link>
    <pubDate>Tue, 23 Jul 2019 22:16:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/07/react-router/</guid>
    <description><![CDATA[简介 React Router 是完整的 React 路由解决方案。React Router 保持 UI 与 URL 同步。它拥有简单的 API 与强大的功能例如代码缓冲加载、动态路由匹配、以及建立正确的位置过渡]]></description>
</item><item>
    <title>Redux 的使用</title>
    <link>http://blog.orionpax.top/2019/07/redux/</link>
    <pubDate>Tue, 23 Jul 2019 22:16:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://blog.orionpax.top/2019/07/redux/</guid>
    <description><![CDATA[简介 Redux 是 JavaScript 状态容器，提供可预测化的状态管理。 三大原则 单一数据源 整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。 State 是只读的（]]></description>
</item></channel>
</rss>
